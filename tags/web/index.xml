<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web on Martin Chorley</title>
    <link>https://martinjc.com/tags/web/</link>
    <description>Recent content in Web on Martin Chorley</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Mon, 26 Jan 2015 10:15:16 +0000</lastBuildDate>
    
	<atom:link href="https://martinjc.com/tags/web/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>NHS Hackday 2015</title>
      <link>https://martinjc.com/2015/01/26/nhs-hackday-2015/</link>
      <pubDate>Mon, 26 Jan 2015 10:15:16 +0000</pubDate>
      
      <guid>https://martinjc.com/2015/01/26/nhs-hackday-2015/</guid>
      <description>This weekend I took part in an incredibly successful NHS hackday, hosted at Cardiff University and organised by Anne Marie Cunningham and James Morgan. We went as a team from the MSc in Computational Journalism, with myself and Glyn attending along with Pooja, Nikita, Annalisa and Charles. At the last-minute I recruited a couple of ringers as well, dragging along Rhys Priestland Dr William Wilberforce Webberley from Comsc and Dr Matthew Williams, previously of this parish.</description>
    </item>
    
    <item>
      <title>Quick and Dirty Twitter API in Python</title>
      <link>https://martinjc.com/2014/11/19/quick-and-dirty-twitter-api-in-python/</link>
      <pubDate>Wed, 19 Nov 2014 12:13:11 +0000</pubDate>
      
      <guid>https://martinjc.com/2014/11/19/quick-and-dirty-twitter-api-in-python/</guid>
      <description>QUICK DISCLAIMER: this is a quick and dirty solution to a problem, so may not represent best coding practice, and has absolutely no error checking or handling. Use with caution&amp;hellip;
A recent project has needed me to scrape some data from Twitter. I considered using Tweepy, but as it was a project for the MSc in Computational Journalism, I thought it would be more interesting to write our own simple Twitter API wrapper in Python.</description>
    </item>
    
    <item>
      <title>BoxUK &#34;For the Social Good&#34; Hackday</title>
      <link>https://martinjc.com/2011/11/22/boxuk-for-the-social-good-hackday/</link>
      <pubDate>Tue, 22 Nov 2011 10:51:04 +0000</pubDate>
      
      <guid>https://martinjc.com/2011/11/22/boxuk-for-the-social-good-hackday/</guid>
      <description>Yesterday I attended the &amp;ldquo;For the Social Good&amp;rdquo; hackday, organised by BoxUK and held at the Students Union at Cardiff University. As you may have gathered from the title, it was a hackday themed around creating apps that had some benefit to society. The event ran from 10am to 10pm, so it was a fairly short hack event compared to some, which had a big influence on what could be done during the time available.</description>
    </item>
    
    <item>
      <title>Foursquare Hackathon Post Mortem</title>
      <link>https://martinjc.com/2011/11/22/foursquare-hackathon-post-mortem/</link>
      <pubDate>Tue, 22 Nov 2011 10:24:13 +0000</pubDate>
      
      <guid>https://martinjc.com/2011/11/22/foursquare-hackathon-post-mortem/</guid>
      <description>Note: I wrote this post just after the hackathon, but then forgot to actually publish it! 
There&amp;rsquo;s a fair amount I learnt from taking part in and helping to organise the foursquare hackathon here at the university that probably deserves its own post. I&amp;rsquo;ll split it into two parts, the taking part and the organisation.
Organising a hack event There were a couple of things I learnt from helping to organise the event that perhaps weren&amp;rsquo;t clear to begin with:</description>
    </item>
    
    <item>
      <title>Scraping data from MyFitnessPal with python</title>
      <link>https://martinjc.com/2011/06/09/scraping-data-from-myfitnesspal-with-python/</link>
      <pubDate>Thu, 09 Jun 2011 08:07:33 +0000</pubDate>
      
      <guid>https://martinjc.com/2011/06/09/scraping-data-from-myfitnesspal-with-python/</guid>
      <description>Following my success with extracting my Google Search History in a simple manner, I&amp;rsquo;ve decided that I should do something similar to extract all the data I&amp;rsquo;ve been feeding into myfitnesspal for the last 5 months. As I briefly mentioned in the review of the app + website, the progress graphs leave a lot to be desired and there&amp;rsquo;s very little in the way of analysis of the data. I have a lot of questions about my progress and there is no easy way to answer all of them using just the website.</description>
    </item>
    
  </channel>
</rss>